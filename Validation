import React, { useEffect } from "react";
import "./ContectUs.css";
// import Navbar from "../Navbar-page/Navbar"
import { useState } from "react";
import axios from "axios";

const ContectUs = () => {
  const [contect, setcontect] = useState({
    name: "",
    email: "",
    address: "",
    mobile: "",
    massage: "",
  });

  // ADD DATA

  const handleChangeAdd = (e) => {
    const { name, value } = e.target;
    setcontect((prevData) => ({
      ...prevData,
      [name]: value,
    }));
  };

  const additem = async (e) => {
    e.preventDefault();
    validateForm();

    if (!validateForm()) {
      return;
    }

    const newitem = {
      name: contect.name,
      email: contect.email,
      address: contect.address,
      mobile: contect.mobile,
      massage: contect.massage,
    };

    await axios.post("http://localhost:5000/addcontect", newitem);

    setcontect({
      name: "",
      email: "",
      address: "",
      mobile: "",
      massage: "",
    });
  };
  const [validationErrors, setValidationErrors] = useState({});

  const validateForm = () => {
    const errors = {};
    //name
    if (!contect.name.trim()) {
      errors.name = "Name is required";
    } else if (!/^[a-zA-Z ]+$/.test(contect.name)) {
      errors.name = "letter is not alow";
    } else if (contect.name.length < 3) {
      errors.name = "Name requires a minimum of 3 characters";
    }
    //email
    else if (!contect.email.trim()) {
      errors.email = "Email is required";

    }
   
     else if (!/\S+@/.test(contect.email)) {
      errors.email = "Invalid email @";

    } 
  
    else if (!/\S+\.com/i.test(contect.email)) {
      errors.email = "Invalid email (.com or .COM)";
    }
    else if (!/\S+@\S+\.\S+/.test(contect.email)) {
      errors.email = "Invalid email format";
    }
    //adress
    else if (!contect.address.trim()) {
      errors.address = "address is required";
    }

    //mobail
    else if (!contect.mobile.trim()) {
      errors.mobile = "mobile is required";
    } else if (!/^\d+$/.test(contect.mobile)) {
      errors.mobile = "letter is not alow";
    } else if (contect.mobile.length < 10) {
      errors.mobile = "Message requires a minimum of 10 characters";
    } else if (contect.mobile.length > 10) {
      errors.mobile = "Message requires a maximum of 10 characters";
    }

    //massge
    else if (!contect.massage.trim()) {
      errors.massage = "Message is required";
    } else if (contect.massage.length < 5) {
      errors.massage = "Message requires a minimum of 5 characters";
    }

    setValidationErrors(errors);
    return Object.keys(errors).length === 0;
  };
  console.log();
  return (
    <div>
      {/* CONTECT US  */}
      <div className="container">
        <h2>Contact Us</h2>
        <form>
          <div className="form-group">
            <label htmlFor="name" className="label">
              Name:
            </label>
            <input
              type="text"
              name="name"
              className="input"
              placeholder="Your Name"
              value={contect.name}
              onChange={handleChangeAdd}
            />

            {/* {validationErrors.name && ( */}
            <span style={{ color: "red" }}>{validationErrors.name}</span>
            {/* ) */}
            {/* } */}
          </div>

          <div className="form-group">
            <label htmlFor="email" className="label">
              Email:
            </label>
            <input
              type="email"
              name="email"
              className="input"
              placeholder="Your Email"
              value={contect.email}
              onChange={handleChangeAdd}
            />
            {validationErrors.email && (
              <span style={{ color: "black" }}>{validationErrors.email}</span>
            )}
          </div>

          <div className="form-group">
            <label htmlFor="address" className="label">
              Address:
            </label>
            <input
              type="text"
              name="address"
              className="input"
              placeholder="Your Address"
              value={contect.address}
              onChange={handleChangeAdd}
            />
            <span style={{ color: "red" }}>{validationErrors.address}</span>
          </div>

          <div className="form-group">
            <label htmlFor="mobile" className="label">
              Mobile Number:
            </label>
            <input
              type="tel"
              name="mobile"
              className="input"
              placeholder="Your Mobile Number"
              value={contect.mobile}
              onChange={handleChangeAdd}
            />
            <span style={{ color: "red" }}>{validationErrors.mobile}</span>
          </div>

          <div className="form-group">
            <label htmlFor="message" className="label">
              Message:
            </label>
            <input
              name="massage"
              className="input"
              placeholder="Your Message"
              rows="4"
              value={contect.massage}
              onChange={handleChangeAdd}
            />

            <span style={{ color: "red" }}>{validationErrors.massage}</span>
          </div>

          <button type="submit" className="button" onClick={additem}>
            Submit
          </button>
        </form>
      </div>
      {/* CONTECT US  */}
    </div>
  );
};

export default ContectUs;
